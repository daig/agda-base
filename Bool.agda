{-# OPTIONS --cubical --safe #-}
module Bool where
open import Cubical.Eq

data ๐น : Set where false true : ๐น

{-# BUILTIN BOOL  ๐น  #-}
{-# BUILTIN FALSE false #-}
{-# BUILTIN TRUE  true  #-}

_โง_ _โจ_ _โ_ : ๐น โ ๐น โ ๐น
false โง _ = false
true โง b = b
false โจ b = b
true โจ b = true
not : ๐น โ ๐น
not false = true
not true = false
true โ b = not b
false โ b = b

infixr 6 _โง_
infixr 5 _โจ_ _โ_

module IO where
  pattern O = false
  pattern I = true
open IO

-- module LE where
--     _โค_ : ๐น โ ๐น โ ๐น
--     O โค _ = I
--     I โค b = b
--     โคI : โ x โ (x โค I) โก I
--     โคI = ฮป { O โ โ ; I โ โ }
--     โคโงI : โ x โ ((I โง x) โค x) โก I
--     โคโงI = ฮป { O โ โ ; I โ โ}
--     โคโจ : โ {a b x y} โ (a โค x โก I) โ (b โค y โก I) โ ((a โจ b) โค (x โจ y)) โก I
--     โคโจ {I} {x = I} _ _ = โ
--     โคโจ {O} {O} _ _ = โ
--     โคโจ {O} {I} {O} {I} _ _ = โ
--     โคโจ {O} {I} {I} _ _ = โ
--     โคฮฃโ : โ {a b} โ a โก I โ (a โจ b โก I)
--     โคฮฃโ {I} _ = โ
--     โคฮฃโ : โ {a b} โ a โก I โ (a โจ b โก I)
--     โคฮฃโ {I} {O} _ = โ
--     โคฮฃโ {I} {I} _ = โ

--     โคโง : โ a b {x y} โ (a โค x โก I) โ (b โค y โก I) โ ((a โง b) โค (x โง y)) โก I
--     โคโง O _ _ _ = โ
--     โคโง I O _ _ = โ
--     โคโง I I {I} {I} _ _ = โ
--     โงI : โ {a b} โ a โก I โ b โก I โ a โง b โก I
--     โงI {I} {I} _ _ = โ

--     โคฯโ : โ {a b} โ a โง b โก I โ a โก I
--     โคฯโ {I} _ = โ
--     โคฯโ : โ {a b} โ a โง b โก I โ b โก I
--     โคฯโ {I} {I} e = โ


