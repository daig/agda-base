{-# OPTIONS --prop --cubical --without-K #-}
module VectorSpace where
open import Cubical.Eq
open import Field
open import Level


module _ (K : Field) (let open Field.Field K) where
    record VectorSpace  : Setโ where
        infixl 6 _|+|_
        infixl 7 _ร|_ 
        infix 8 ~_
        --  ๐รท_
        field Vec : Set
        field vplus : (v w : Vec) โ Vec
        private _|+|_ = vplus
        field |+|assoc : โ a b c โ a |+| b |+| c โก a |+| (b |+| c)
        field |+|comm : โ a b โ a |+| b โก b |+| a
        field ฮต : Vec
        field ฮต|+| : โ x โ ฮต  |+| x โก x 
        |+|ฮต : โ x โ x |+| ฮต  โก x
        |+|ฮต x = trans (|+|comm x ฮต) (ฮต|+| x)

        field ~_ : Vec โ Vec
        field ~inv : โ x โ ~ x |+| x โก ฮต
        inv~ : โ x โ x |+| ~ x โก ฮต
        inv~ x = trans (|+|comm x (~ x)) (~inv x)
        _|-|_ : Vec โ Vec โ Vec
        v |-| w = v |+| ~ w

        field _ร|_ : (k : Elt) (v : Vec) โ Vec
        field ร|assoc : (c k : Elt) (v : Vec) โ (c ร k) ร| v โก c ร| (k ร| v) 
        field ๐ร| : โ v โ ๐ ร| v โก v 
        field ร|+|distrib : โ k v w โ k ร| (v |+| w) โก k ร| v |+| k ร| w
        field +ร|distrib : โ c k v โ (c + k) ร| v โก c ร| v |+| k ร| v
open VectorSpace


module LinearMap {โ : Level } {K : Field} (V W : VectorSpace K)  where
    open VectorSpace V renaming (vplus to _+v_)
    open VectorSpace W renaming (vplus to _+w_)
    record _โธ_ : Set โ where
        field to : Vec V โ Vec W
        field to+ : (u v : Vec V) โ to (u +v v) โก to u +w to v
