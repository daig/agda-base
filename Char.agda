{-# OPTIONS --cubical #-}
module Char where
open import Nat
open import Bool

postulate Char : Set
{-# BUILTIN CHAR Char #-}


module PrimChar where
    primitive
        primIsLower primIsDigit primIsAlpha primIsSpace primIsAscii
            primIsLatin1 primIsPrint primIsHexDigit : Char ‚Üí ùîπ
        primToUpper primToLower : Char ‚Üí Char
        primCharToNat : Char ‚Üí ‚Ñï
        primNatToChar : ‚Ñï ‚Üí Char
        primCharEquality : Char ‚Üí Char ‚Üí ùîπ
open PrimChar public renaming
    (primIsLower to lower?
    ;primIsDigit to digit?
    ;primIsAlpha to alpha?
    ;primIsSpace to space?
    ;primIsAscii to ascii?
    ;primIsLatin1 to latin1?
    ;primIsPrint to print?
    ;primIsHexDigit to hex?
    ;primToUpper to upper
    ;primToLower to lower
    ;primCharToNat to to‚Ñï
    ;primNatToChar to from‚Ñï
    ;primCharEquality to eq?)
